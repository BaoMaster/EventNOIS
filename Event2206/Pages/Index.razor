@page "/"

@using System.ComponentModel.DataAnnotations;
@using System.Text.Json;
@using Event2206.Data.Services
@inject UserService userService;
@inject NavigationManager MyNavigationManager
@using System.Globalization
@using Event2206.Data.Entities;
@inject NavigationManager NavManager

<style>
    .title {
        text-align: center;
    }

    .form-register {
        margin: 0 auto
    }
</style>

<div>
    <Row>
        <Col Xl=12 class="title">
        <h1>Thân mời quý khách hàng đến tham gia buổi Seminar ngày 22/06/2022</h1>
        </Col>
        <Col Xl=6>
        <Form Model="@modelRules"
              ValidateMode="@FormValidateMode.Rules"
              ValidateOnChange="@validateOnChange"
              LabelColSpan="6"
              LabelAlign="AntLabelAlignType.Left"
              WrapperColSpan="14"
              OnFinish="OnFinish"
              OnFinishFailed="OnFinishFailed"
              Size="@AntSizeLDSType.Small">
            <FormItem Label="Họ và tên" Rules=@(userNameRules)>
                <Input @bind-Value="@context.FullName" />
            </FormItem>
            <FormItem Label="Địa chỉ" Rules=@(addressRules)>
                <Input @bind-Value="@context.Address" />
            </FormItem>
            <FormItem Label="Email" Rules=@(emailRules)>
                <Input @bind-Value="@context.Email" />
            </FormItem>
            <FormItem Label="Số điện thoại" Rules=@(phoneNumberRules)>
                <Input @bind-Value="@context.PhoneNumber" />
            </FormItem>
            <FormItem Label="Tên công ty">
                <Input @bind-Value="@context.CompanyName" />
            </FormItem>

            <FormItem WrapperColOffset="8" WrapperColSpan="16">
                <Button Type="@ButtonType.Primary" HtmlType="submit">
                    Submit
                </Button>
            </FormItem>
        </Form>
        </Col>
    </Row>

</div>


@code
{
    public class Person
    {
        [Required]
        public string Name { get; set; }
        public int Age { get; set; } = 2;
    }

    public class UserModel
    {
        public string FullName { get; set; }
        public string Address { get; set; }
        public string Email { get; set; }
        public string PhoneNumber { get; set; }
        public string CompanyName { get; set; }

    }

    private UserModel modelRules = new UserModel();

    private bool validateOnChange = false;

    private FormValidationRule[] userNameRules = new FormValidationRule[] {
        new FormValidationRule { Required = true , Message="Vui lòng nhập Họ và tên"}
    };

    private FormValidationRule[] addressRules = new FormValidationRule[]{
        new FormValidationRule{ Required = true , Message="Vui lòng nhập Địa chỉ"}
    };


    private FormValidationRule[] emailRules = new FormValidationRule[]{
        new FormValidationRule { Required = true, Message="Vui lòng nhập Email" },
        new FormValidationRule { Type = FormFieldType.Email, Message="Email không hợp lệ" },
    };

    private FormValidationRule[] phoneNumberRules = new FormValidationRule[]{
        new FormValidationRule{ Required = true , Message="Vui lòng nhập Số điện thoại"}
    };



    private async void OnFinish(EditContext editContext)
    {
        Console.WriteLine($"Success:{modelRules}");

        var model = JsonSerializer.Serialize(modelRules);
        var user = new User()
            {
                Address = modelRules.Address,
                CompanyName = modelRules.CompanyName,
                Email = modelRules.Email,
                FullName = modelRules.FullName,
                PhoneNumber = modelRules.PhoneNumber,
                Created = DateTime.Now
            };

        var res = await userService.SaveRecord(user, MyNavigationManager.Uri);
        if (res!=null)
        {
            NavManager.NavigateTo("/registered/" + res);
        }

    }

    private void OnFinishFailed(EditContext editContext)
    {
        Console.WriteLine($"Failed:{JsonSerializer.Serialize(modelRules)}");
    }


}